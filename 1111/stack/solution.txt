неочевидная задача
1. строка с валидной последовательностью
2. строку нужно разбить на 2 группы
3. Now choose any such A and B such that max(depth(A), depth(B)) is the minimum possible value.
4. Return an answer array (of length seq.length) that encodes such a choice of A and B:
    answer[i] = 0 if seq[i] is part of A, 
    else answer[i] = 1. 
    Note that even though multiple answers may exist, you may return any of them.

Пример:
первые 2 скобки допустим запихаем в 1 группу:
A A
( ) ( ( ) ( ) )

допустим решили разбить на группы вот так:
A A A A A B B A
( ) ( ( ) ( ) )
0 1 3 4 5 6 7 8

Почему так нельзя - потому, что на индексе 4 глубина А будет 2, а нужно разбить так, чтобы глубина была минимальной.

Этого можно добиться например так:
A A A B B B B A
( ) ( ( ) ( ) )
0 1 3 4 5 6 7 8

Как этого можно добиться, как вариант четные скобки пихать в одну группу, нечетные в другую
допустим вариант
( ( ( ) ) )
A B A A B A
1 0 1 1 0 1


input: "((()))"
output: [1,0,1,1,0,1]
